<?xml version="1.0" encoding="Cp1252"?>
<pmd-cpd>
   <duplication lines="11" tokens="139">
      <file column="21" endcolumn="17" endline="109" line="99"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\noDataIllustration.html"/>
      <file column="17" endcolumn="17" endline="125" line="115"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\noDataIllustration.html"/>
      <codefragment><![CDATA[                    >
                        <path
                            vector-effect="non-scaling-stroke"
                            d="M44,17.5 L63,17.5 C62.2789714,12.0723971 64.081543,7.53186978 68.4077148,3.87841797 C73.3754883,-0.195556641 79.2734375,0.717773438 82.440918,2.12353516 C85.6083984,3.52929687 87.9606934,5.46069336 89.5913086,9.10524041 C90.2822266,10.6397351 90.7517904,11.9379883 91,13"
                        ></path>
                        <path
                            vector-effect="non-scaling-stroke"
                            d="M83 20.5C84.0558268 16.8461914 86.2227376 14.4572754 89.5007324 13.333252 94.4177246 11.6472168 99.0800781 13.8925781 100.942383 16.1518555 102.804687 18.4111328 103.39502 20.2260742 103.746582 22.1201172 103.980957 23.3828125 104.06543 24.8427734 104 26.5 108.141764 26.3313802 110.918945 27.1647135 112.331543 29 114.040039 31.1936035 114.215332 33.817627 113.593018 35.75 112.970703 37.682373 110.894531 40.5 107 40.5L28 40.5M18 27.5L83.0004985 27.5M0 27.5L8 27.5"
                        ></path>
                    </g>
                </g>]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="121">
      <file column="52" endcolumn="32" endline="137" line="125"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\noDataIllustration.html"/>
      <file column="52" endcolumn="32" endline="161" line="149"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\noDataIllustration.html"/>
      <codefragment><![CDATA[                <g transform="translate(204.5 228.5)">
                    <path
                        vector-effect="non-scaling-stroke"
                        class="slds-illustration__fill-secondary"
                        d="M18.9209988,1.95433401 L33.259296,51.443436 C33.5666778,52.5043744 32.9557995,53.613617 31.8948612,53.9209988 C31.7139843,53.9734036 31.5266126,54 31.3382972,54 L2.6617028,54 C1.5571333,55.0.661702805,53.1045695 0.661702805,52 C0.661702805,51.8116846 0.688299176,51.6243129 0.74070397,51.443436 L15.0790012,1.95433401 C15.386383,0.893395645 16.4956256,0.282517358 17.556564,0.589899164 C18.2152102,0.780726338 18.7301717,1.29568777 18.9209988,1.95433401 Z"
                    ></path>
                    <g
                        class="slds-illustration__stroke-primary"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="3"
                    >
                        <polygon points="17 .324 34 55.0 54"></polygon>]]></codefragment>
   </duplication>
   <duplication lines="31" tokens="77">
      <file column="28" endcolumn="65" endline="139" line="109"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\barcodeScanner\__tests__\barcodeScanner.test.js"/>
      <file column="28" endcolumn="65" endline="179" line="149"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\barcodeScanner\__tests__\barcodeScanner.test.js"/>
      <codefragment><![CDATA[        setUserCanceledScan();

        // Mock handler for toast event
        const toastEventSpy = jest.fn();

        // Create initial BarcodeScanner element and attach to virtual DOM
        const elementBarcodeScanner = createElement(
            'c-barcode-scanner-example',
            { is: BarcodeScanner }
        );
        document.body.appendChild(elementBarcodeScanner);

        // Add toast event listener to component
        elementBarcodeScanner.addEventListener(
            ShowToastEventName,
            toastEventSpy
        );

        // Mount `Scan QR Code` button and trigger scan of property record ID
        const elementScanQRCodeButton =
            elementBarcodeScanner.shadowRoot.querySelector('lightning-button');
        elementScanQRCodeButton.click();

        // Wait for element to mount
        await flushPromises();

        // Check that cancelation toast was triggered

        // Check if toast event has been fired
        expect(toastEventSpy).toHaveBeenCalled();
        expect(toastEventSpy.mock.calls[0][0].detail.title).toBe(]]></codefragment>
   </duplication>
   <duplication lines="23" tokens="76">
      <file column="66" endcolumn="61" endline="66" line="44"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\sampleDataImporter\__tests__\sampleDataImporter.test.js"/>
      <file column="64" endcolumn="61" endline="97" line="75"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\sampleDataImporter\__tests__\sampleDataImporter.test.js"/>
      <codefragment><![CDATA[        importSampleData.mockResolvedValue(APEX_OPERATION_SUCCESS);

        // Create initial element
        const element = createElement('c-sample-data-importer', {
            is: SampleDataImporter
        });
        document.body.appendChild(element);

        // Mock handler for toast event
        const handler = jest.fn();
        // Add event listener to catch toast event
        element.addEventListener(ShowToastEventName, handler);

        // Select button for executing Apex call
        const buttonEl = element.shadowRoot.querySelector('lightning-button');
        buttonEl.click();

        // Wait for any asynchronous DOM updates
        await flushPromises();

        // Check if toast event has been fired
        expect(handler).toHaveBeenCalled();
        expect(handler.mock.calls[0][0].detail.variant).toBe('success');]]></codefragment>
   </duplication>
   <duplication lines="10" tokens="72">
      <file column="133" endcolumn="40" endline="149" line="140"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\noDataIllustration.html"/>
      <file column="133" endcolumn="40" endline="176" line="167"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\noDataIllustration.html"/>
      <codefragment><![CDATA[                            d="M17,6.32394366 C17,42.1378022 17,60.4711356 17,61.3239437 C17,60.4711356 17,42.1378022 17,6.32394366 Z"
                        ></path>
                        <path
                            vector-effect="non-scaling-stroke"
                            d="M17,29.3239437 C22.3333333,35.7851611 25,39.1184944 25,39.3239437 C25,39.1184944 22.3333333,35.7851611 17,29.3239437 Z"
                            transform="matrix(-1 0 0 1 42 0)"
                        ></path>
                    </g>
                </g>
                <g transform="translate(439.5 227.5)">]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="66">
      <file column="20" endcolumn="11" endline="52" line="40"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertyListMap\__tests__\propertyListMap.test.js"/>
      <file column="27" endcolumn="19" endline="185" line="173"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertyListMap\__tests__\propertyListMap.test.js"/>
      <codefragment><![CDATA[const LEAFLET_STUB = {
    map: () => ({
        setView: () => {},
        scrollWheelZoom: {
            disable: () => {}
        },
        removeLayer: () => {}
    }),
    tileLayer: () => ({
        addTo: () => {}
    }),
    divIcon: () => {},
    marker: () => ({]]></codefragment>
   </duplication>
   <duplication lines="11" tokens="66">
      <file column="48" endcolumn="2" endline="19" line="9"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\inlineMessage.html"/>
      <file column="68" endcolumn="6" endline="256" line="246"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\errorPanel\templates\noDataIllustration.html"/>
      <codefragment><![CDATA[        <template lwc:if={errorMessages.length}>
            <template lwc:if={viewDetails}>
                <template for:each={errorMessages} for:item="message">
                    <p class="slds-text-body_regular" key={message}>
                        {message}
                    </p>
                </template>
            </template>
        </template>
    </div>
</template>]]></codefragment>
   </duplication>
   <duplication lines="10" tokens="56">
      <file column="18" endcolumn="11" endline="27" line="18"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\brokerCard\brokerCard.html"/>
      <file column="29" endcolumn="11" endline="39" line="30"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertySummary\propertySummary.html"/>
      <codefragment><![CDATA[            </div>
        </template>
        <template lwc:if={property.error}>
            <c-error-panel
                friendly-message="Error retrieving data"
                errors={property.error}
            ></c-error-panel>
        </template>
    </lightning-card>
</template>]]></codefragment>
   </duplication>
   <duplication lines="17" tokens="55">
      <file column="26" endcolumn="38" endline="41" line="25"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertyMap\__tests__\propertyMap.test.js"/>
      <file column="30" endcolumn="38" endline="24" line="8"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertySummary\__tests__\propertySummary.test.js"/>
      <codefragment><![CDATA[describe('c-property-map', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
        jest.clearAllMocks();
    });

    // Helper function to wait until the microtask queue is empty.
    // Used when having to wait for asynchronous DOM updates.
    async function flushPromises() {
        return Promise.resolve();
    }

    it('renders an error panel when no property is selected', async () => {
        const element = createElement('c-property-map', {]]></codefragment>
   </duplication>
   <duplication lines="22" tokens="53">
      <file column="38" endcolumn="1" endline="94" line="73"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\daysOnMarket\daysOnMarket.js"/>
      <file column="37" endcolumn="1" endline="86" line="65"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertyMap\propertyMap.js"/>
      <codefragment><![CDATA[        return 'width:' + value + '%';
    }

    connectedCallback() {
        this.subscription = subscribe(
            this.messageContext,
            PROPERTYSELECTEDMC,
            (message) => {
                this.handlePropertySelected(message);
            }
        );
    }

    disconnectedCallback() {
        unsubscribe(this.subscription);
        this.subscription = null;
    }

    handlePropertySelected(message) {
        this.propertyId = message.propertyId;
    }
}]]></codefragment>
   </duplication>
   <duplication lines="13" tokens="52">
      <file column="49" endcolumn="5" endline="55" line="43"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\classes\GeocodingServiceTest.cls"/>
      <file column="54" endcolumn="5" endline="80" line="68"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\classes\GeocodingServiceTest.cls"/>
      <codefragment><![CDATA[            new OpenStreetMapHttpCalloutMockImpl()
        );

        // WHEN
        List<GeocodingService.Coordinates> computedCoordinates = GeocodingService.geocodeAddresses(
            new List<GeocodingService.GeocodingAddress>{ address }
        );

        // THEN
        Assert.areEqual(1, computedCoordinates.size());
        Assert.isNull(computedCoordinates[0].lat);
        Assert.isNull(computedCoordinates[0].lon);
    }]]></codefragment>
   </duplication>
   <duplication lines="21" tokens="52">
      <file column="38" endcolumn="5" endline="93" line="73"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\daysOnMarket\daysOnMarket.js"/>
      <file column="37" endcolumn="5" endline="85" line="65"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertyMap\propertyMap.js"/>
      <file column="64" endcolumn="5" endline="69" line="49"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertySummary\propertySummary.js"/>
      <codefragment><![CDATA[        return 'width:' + value + '%';
    }

    connectedCallback() {
        this.subscription = subscribe(
            this.messageContext,
            PROPERTYSELECTEDMC,
            (message) => {
                this.handlePropertySelected(message);
            }
        );
    }

    disconnectedCallback() {
        unsubscribe(this.subscription);
        this.subscription = null;
    }

    handlePropertySelected(message) {
        this.propertyId = message.propertyId;
    }]]></codefragment>
   </duplication>
   <duplication lines="17" tokens="51">
      <file column="31" endcolumn="11" endline="56" line="40"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertyCarousel\__tests__\propertyCarousel.test.js"/>
      <file column="32" endcolumn="11" endline="41" line="25"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertyTileList\__tests__\propertyTileList.test.js"/>
      <codefragment><![CDATA[describe('c-property-carousel', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
        jest.clearAllMocks();
    });

    // Helper function to wait until the microtask queue is empty.
    // Used when having to wait for asynchronous DOM updates.
    async function flushPromises() {
        return Promise.resolve();
    }

    describe('@wire data', () => {
        it('renders carousel with pictures when property and pictures returned', async () => {]]></codefragment>
   </duplication>
   <duplication lines="9" tokens="51">
      <file column="41" endcolumn="35" endline="11" line="3"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\brokerCard\brokerCard.html"/>
      <file column="52" endcolumn="35" endline="12" line="4"
            path="C:\dev\git\dreamhouse-lwc\force-app\main\default\lwc\propertySummary\propertySummary.html"/>
      <codefragment><![CDATA[        <template lwc:if={property.data}>
            <lightning-button-icon
                icon-name="utility:expand_alt"
                slot="actions"
                onclick={handleNavigateToRecord}
            >
                <label>Navigate to record</label>
            </lightning-button-icon>
            <div class="slds-var-m-around_medium">]]></codefragment>
   </duplication>
</pmd-cpd>